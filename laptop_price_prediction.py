# -*- coding: utf-8 -*-
"""Laptop_Price_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12pptGnOJTS5k-b2XpMHCtMn9Q1LgyZzs
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df= pd.read_csv('laptopPrice.csv')

# df=pd.read_csv('laptop_price.csv', encoding="latin1")

df.head()

# checking Data Type
df.info()

df.columns

# checking the Null Value
df.isnull().sum()

# Checking Duplicate Value
df.duplicated().sum()

df = df.drop_duplicates()

df.duplicated().sum()

# Checking unique value
df.nunique()

df.describe()

# Histogram plot
fig, axs = plt.subplots(1, 2, figsize=(15, 7))
plt.subplot(121)
sns.histplot(data=df, x= 'Price', bins=30, kde=True, color='g')
plt.subplot(122)
sns.histplot(data=df, x= 'Price', bins=30, kde=True, color='g', hue= 'rating')
plt.show()

f,ax=plt.subplots(1,2,figsize=(25,10))
Group_data = df.groupby('brand')
sns.barplot(x = Group_data ['Price'].mean().index, y = Group_data['Price'].mean().values,ax= ax[0],  palette = 'mako')
for container in ax[0].containers:
    ax[0].bar_label(container,color='black',size=20)
    ax[0].set_xlabel("Brand")
    ax[0].set_ylabel("Price")

palette_color = sns.color_palette('summer')
plt.pie(x = df['brand'].value_counts(),labels=df['brand'].value_counts().index,autopct='%.0f%%',shadow=True, colors= palette_color)
plt.show()

sns.set_context('notebook', font_scale = 1.3)
plt.figure(figsize=(22, 7))
ax = sns.barplot(x=df['processor_brand'],
                 y=df['Price'],
                 hue = df['processor_name'],
                 palette='viridis',
                 ci = None)
plt.ylabel('Price');

sns.set_context('notebook', font_scale = 1.3)
plt.figure(figsize=(22, 7))
ax = sns.barplot(x=df['ram_type'],
                 y=df['Price'],
                 hue = df['ram_gb'],
                 palette='viridis',
                 ci = None)
plt.ylabel('Price');

sns.set_context('notebook', font_scale = 1.3)
plt.figure(figsize=(22, 7))
ax = sns.barplot(x=df['ssd'],
                 y=df['Price'],
                 hue = df['hdd'],
                 palette='mako',
                 ci = None)
plt.ylabel('Price');

"""# predict the price of laptop : Ram---> Single linear regression.

# Predict the price of laptop : Ram , SSD,HDD,Rating ---> Price ---> Multiple Regression .

# Single Regression:

# X--> Ram_gb

# y --> Price
"""

# Independent Variable:
x=pd.DataFrame(df.loc[:,['ram_gb','ssd','hdd']])

# Extrcating out the Numerical Information .

num1=x['ram_gb'].str.split(' ',1,expand=True)
num2=x['ssd'].str.split(' ',1,expand=True)
num3=x['hdd'].str.split(' ',1,expand=True)

x['ram_gb']=num1[0]
x['ssd']=num2[0]
x['hdd']=num3[0]

# Integer

x['ram_gb']=pd.to_numeric(x['ram_gb'])
x['ssd']=pd.to_numeric(x['ssd'])
x['hdd']=pd.to_numeric(x['hdd'])

x['ram_gb']

y= df.loc[:,'Price']

x= pd.DataFrame(x)

y= pd.DataFrame(y)

# Multiple columns
x.head()

y.head()

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test= train_test_split(x,y,train_size=0.8,random_state=0)

x_train

x_test

from sklearn.linear_model import LinearRegression

hit= LinearRegression()

x_test

hit.fit(x_train,y_train)

y_pred= hit.predict(x_test)

from sklearn.metrics import r2_score

R2= r2_score(y_test,y_pred)

x['ssd'].value_counts()

x['hdd'].value_counts()

x['ram_gb'].value_counts()

df.head()

new= x_test.shape

new1= new[0]

new1

old= new[1]

old

R2

type(R2)

R2*10